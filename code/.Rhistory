dat <- read.csv("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Emma_med_den_pdx_2dx_10_04_2017.csv")
dat <- read.csv("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Medicare_Oct17/Emma_den_med_pdx_10_04_2017.csv")
dat <- read.csv("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Medicare_Oct17/Emma_den_med_pdx_10_04_2017.csv")
dat <- read.csv(file="/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/Emma_med_11_28_2017.csv")
dim(dat)
View(dat)
dat[1,]
names(dat)
class(dat$adate)
class(dat$ddate)
class(dat$Race_gp)
levels(dat$Race_gp)
class(dat$year)
min(dat$year)
max(dat$year)
class(dat$ddate)
sum(dat$ddate=="")
class(prov_num)
class(dat$prov_num)
blah <- as.numeric(dat$prov_num)
min(blah)
max(blah)
blah <- as.numeric(as.character(dat$prov_num))
min(blah)
min(blah[!is.na(blah)])
miax(blah[!is.na(blah)])
max(blah[!is.na(blah)])
class(dat$X_QID_)
min(dat$X_QID_)
max(dat$X_QID_)
levels(dat$Sex_gp)
class(dat$FIPS)
min(dat$FIPS)
min(dat$FIPS[!is.na(dat$FIPS)])
View(dat[,c("DODFLAG","BENE_DOD")])
adate <- Date(dat$adate)
adate <- as.Date(dat$adate)
?as.Date
dat$adate[`]
dat$adate[1]
''
""
'
aq
q
a;slkdjg
}
[]
`
`
`
dat$adate[1]
adate <- as.Date(dat$adate, format="%d%b%Y")
adate[1:10]
cbind(adate[1:10],dat$adate[1:10])
adate[1:10]
dat$adate[1:10]
dat$adate_r <- as.Date(dat$adate, format="%d%b%Y")
dat$ddate_r <- as.Date(dat$ddate, format="%d%b%Y")
dat$BENE_DOD_r <- as.Date(dat$BENE_DOD_r, format="%d%b%Y")
dat$BENE_DOD_r <- as.Date(dat$BENE_DOD, format="%d%b%Y")
dat_diff <- dat$BENE_DOD_r - dat$ddat_r
summary(dat_diff)
class(dat$BENE_DOD_r)
class(dat$ddat_r)
class(dat$ddate_r)
dat_diff <- dat$BENE_DOD_r - dat$ddate_r
summary(dat_diff)
summarize(dat_diff)
class(dat_diff)
summary(as.numeric(dat_diff))
max(dat)diff
max(dat_diff)
max(dat_diff[!is.na(dat_diff)])
min(dat_diff[!is.na(dat_diff)])
dat_diff <- dat_diff[!is.na(dat_diff)]
summary(dat_diff)
max(dat_diff)
min(dat_diff)
sum(dat_diff < 0)
length(dat_diff)
length_stay <- dat$adate_r - dat$ddate_r
max(length_stay)
min(length_stay)
length_stay <- dat$ddate_r - dat$adate_r
summary(length_stay)
max(length_stay)
min(length_stay)
min(dat_diff)
max(dat_diff)
1275/365.25
length(unique(dat$QID))
length(unique(dat$X_QID_))
dim(dat)
nrow(dat)/length(unique(dat$X_QID_))
nrow(dat)/length(unique(dat$QID))
nrow(dat)/length(unique(dat$prov_num))
max(dat$BENE_DOD_r)
max(dat$BENE_DOD_r,na.rm=T)
medi <- dat
rm(dat)
temp <- read.csv(file="/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/data_JAMA_heatwaves_paper/zip files/County_weather_1999_2010_04_06_2014.CSV")
names(temp)
?merge
names(medi)
View(temp)
temp$adate_r <- as.date(temp$link_ID)
?as.date
temp$adate_r <- as.Date(temp$link_ID)
temp$adate_r[1:10]
medi$adate_r[1:10]
min(medi$adate_r)
min(temp$adate_r)
max(medi$adate_r)
max(temp$adate_r)
dat <- merge(medi, temp, by=c("FIPS","adate_r"), all.x=T)
dim(dat)
dim(medi)
save(dat,file="/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/merged.Rdata")
dim(Dat)
dim(dat)
min(temp$adate_r)
max(temp$adate_r)
keep <- dat$adate_r <= Date("2010-12-31") & dat$adate_r >= Date("1999-01-01")
keep <- dat$adate_r <= as.Date("2010-12-31") & dat$adate_r >= as.Date("1999-01-01")
sum(keep)
dim(dat)
sum(keep)/nrow(dat)
dat <- dat[keep,]
View(dat)
save(dat,file="/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/merged.Rdata")
load(file="/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/merged.Rdata")
View(dat)
head(dat)
View(head(dat))
names(dat)
class(dat$FIPS)
CSA.names <- c("Chicago-Naperville, IL-IN-WI", "New York-Newark, NY-NJ-CT-PA",
"Miami-Fort Lauderdale-Port St. Lucie, FL", "Houston-The Woodlands, TX", "Los Angeles-Long Beach, CA")
for(nm in CSA.names){
}
nm <- CSA.names[1]
nm
CSA.fips <- read.csv(file=paste0("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/R_code/MORETreeS/Data/CSAs/",nm,"_FIPS_codes.csv"),header = F)[,1]
CSA.fips
dat_sub <- subset(dat,FIPS %in% CSA.fips & Emer_adm==1,select=c("QID","Race_gp","Sex_gp","Dual","diag1","adate","temperature_daily_county_mean","temperature_daily_county_min","temperature_daily_county_max"))
save(dat_sub,file=paste0("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/merged_",nm,".Rdata"))
CSA.names <- c("Chicago-Naperville, IL-IN-WI", "New York-Newark, NY-NJ-CT-PA",
"Miami-Fort Lauderdale-Port St. Lucie, FL", "Houston-The Woodlands, TX", "Los Angeles-Long Beach, CA")
for(nm in CSA.names){
# Read in list of relevant FIPS codes
CSA.fips <- read.csv(file=paste0("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/R_code/MORETreeS/Data/CSAs/",nm,"_FIPS_codes.csv"),header = F)[,1]
# Extract data for this city, keeping only relevant variables and emergency admissions only
dat_sub <- subset(dat,FIPS %in% CSA.fips & Emer_adm==1,select=c("QID","Race_gp","Sex_gp","Dual","diag1","adate","temperature_daily_county_mean","temperature_daily_county_min","temperature_daily_county_max"))
# Save dataset
save(dat_sub,file=paste0("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/merged_",nm,".Rdata"))
}
dim(dat_sub)
names(dat_sub)
length(unique(dat_sub$QID))
dim(dat)
require(fst)
read_fst(file="./shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/zipcode_er_part14.fst")
?read_fst
read_fst(path="./shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/zipcode_er_part14.fst")
require(NSAPHutils)
devtools::install_github("NSAPH/NSAPHutils")
require(NSAPHutils)
require(fst)
dir <- "shared_space/ci3_health_data/medicare/gen_admission/1999_2016/targeted_conditions/cache_data/admissions_by_year/"
getwd()
print(list.files(dir))
print(fst.metadata(paste0(dir,"admissions_2000.fst")))
View(fst.metadata(paste0(dir,"admissions_2000.fst")))
require(icd)
getwd()
setwd("/nfs/home/E/ethomas/shared_space/ci3_analysis/moretrees2/code/")
library(NSAPHutils)
library(data.table)
library(fst)
library(icd)
library(magrittr)
# Get list of relevant ICD9 codes at billable level
codes <- icd9_chapters$"Diseases Of The Circulatory System"
codes <- expand_range(codes[1], codes[2])
codes <- get_leaf(codes)
blah <- as.data.frame(icd9_map_multi_ccs)
length(icd9_map_multi_ccs[[1]])
length(icd9_map_multi_ccs[[2]])
all.equal(as.character(unlist(icd9_map_multi_ccs[[1]])), as.character(unlist(icd9_map_multi_ccs[[1]]))
)
all.equal(as.character(unlist(icd9_map_multi_ccs[[1]])), as.character(unlist(icd9_map_multi_ccs[[2]])))
all.equal(as.character(unlist(icd9_map_multi_ccs[[1]])), as.character(unlist(icd9_map_multi_ccs[[3]])))
all.equal(as.character(unlist(icd9_map_multi_ccs[[1]])), as.character(unlist(icd9_map_multi_ccs[[4]])))
length(unlist(icd9_map_multi_ccs[[1]]))
length(unlist(icd9_map_multi_ccs[[2]]))
length(unlist(icd9_map_multi_ccs[[3]]))
length(unlist(icd9_map_multi_ccs[[4]]))
ccs_icd9 <- data.frame(icd9 = codes, stringsAsFactors = F)
for (i in 1:4) {
ccs_list <- icd9_map_multi_ccs[[i]]
ccs_df <- data.frame(icd9 = unlist(ccs_list),
stringsAsFactors = F)
ccs_df$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
ccs_icd9 <- merge(ccds_icd9, ccs_df, by = icd9, all.x = T, all.y = F)
}
ccs_icd9 <- data.frame(icd9 = codes, stringsAsFactors = F)
for (i in 1:4) {
ccs_list <- icd9_map_multi_ccs[[i]]
ccs_df <- data.frame(icd9 = unlist(ccs_list),
stringsAsFactors = F)
ccs_df$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
ccs_icd9 <- merge(ccs_icd9, ccs_df, by = icd9, all.x = T, all.y = F)
}
ccs_icd9 <- data.frame(icd9 = codes, stringsAsFactors = F)
for (i in 1:4) {
ccs_list <- icd9_map_multi_ccs[[i]]
ccs_df <- data.frame(icd9 = unlist(ccs_list),
stringsAsFactors = F)
ccs_df$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
ccs_icd9 <- merge(ccs_icd9, ccs_df, by = "icd9", all.x = T, all.y = F)
}
i <- 1
ccs_icd9 <- data.frame(icd9 = codes, stringsAsFactors = F)
ccs_list <- icd9_map_multi_ccs[[i]]
ccs_df <- data.frame(icd9 = unlist(ccs_list),
stringsAsFactors = F)
ccs_df$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
names(ccs_df)
paste0("ccs",i)
ccs_icd9 <- data.frame(icd9 = codes, stringsAsFactors = F)
for (i in 1:4) {
ccs_list <- icd9_map_multi_ccs[[i]]
ccs_df <- data.frame(icd9 = unlist(ccs_list),
stringsAsFactors = F)
ccs_df$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
names(ccs_df)[2] <- paste0("ccs_l", i)
ccs_icd9 <- merge(ccs_icd9, ccs_df, by = "icd9", all.x = T, all.y = F)
}
View(ccs_icd9)
dim(ccs_icd9)
length(codes)
View(ccs_icd9)
year <- 2000
year_ <- 2000
admission_data <- read_data(admissions, years = year_, columns = admissions_columns)
admissions <- "../data/admissions"
admission_data <- read_data(admissions, years = year_, columns = admissions_columns)
admissions <- "../data/admissions"
admissions_columns <- c("QID", "DIAG1", "ADATE", "zipcode_R")
admission_data <- read_data(admissions, years = year_, columns = admissions_columns)
names(admission_data) <- tolower(names(admission_data))
# Keep only relevant diagnoses
admission_data <- subset(admission_data, diag1 %in% codes)
# Merge in ccs codes
admission_data <- merge(admission_data, ccs_icd9, by.x = "diag1",
by.y = "icd9", all.x = T)
names(admission_data)
head(admission_data)
write_fst(counts, paste0("../data/admissions_cvd/admissions_cvd_", year_, ".fst"))
write_fst(admission_data, paste0("../data/admissions_cvd/admissions_cvd_", year_, ".fst"))
rm(list = ls)
setwd("/nfs/home/E/ethomas/shared_space/ci3_analysis/moretrees2/code/")
rm(list = ls())
setwd("/nfs/home/E/ethomas/shared_space/ci3_analysis/moretrees2/code/")
library(NSAPHutils)
set_threads()
library(data.table)
library(fst)
library(icd)
library(magrittr)
# Get list of relevant ICD9 codes at billable level
codes <- icd9_chapters$"Diseases Of The Circulatory System"
codes <- expand_range(codes[1], codes[2])
codes <- get_leaf(codes)
# Get data.frame showing mapping from ICD9 to multilevel CCS
# Get data.frame showing mapping from ICD9 to multilevel CCS
ccs_icd9 <- data.frame(icd9 = codes, stringsAsFactors = F)
for (i in 1:4) {
ccs_list <- icd9_map_multi_ccs[[i]]
ccs_df <- data.frame(icd9 = unlist(ccs_list),
stringsAsFactors = F)
ccs_df$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
names(ccs_df)[2] <- paste0("ccs_l", i)
ccs_icd9 <- merge(ccs_icd9, ccs_df, by = "icd9", all.x = T, all.y = F)
}
admissions <- "../data/admissions"
admissions_columns <- c("QID", "DIAG1", "ADATE", "zipcode_R")
for (year_ in 2000:2014) {
# Read in data
admission_data <- read_data(admissions, years = year_, columns = admissions_columns)
names(admission_data) <- tolower(names(admission_data))
# Keep only relevant diagnoses
admission_data <- subset(admission_data, diag1 %in% codes)
# Merge in ccs codes
admission_data <- merge(admission_data, ccs_icd9, by.x = "diag1",
by.y = "icd9", all.x = T)
# Write to file
write_fst(admission_data, paste0("../data/admissions_cvd/admissions_cvd_", year_, ".fst"))
}
unlist(icd9_map_multi_ccs[[2]])
unlist(icd9_map_multi_ccs[[1]])
unlist(icd9_map_multi_ccs[[1]])[1:100]
ccs_list <- icd9_map_multi_ccs[[3]]
names(ccs_list)
denom_path <- "../data/denominator/"
year_ <- 2010
patient_summary <- read_data(denom_path, years = year_,
columns = denominator_columns)
denominator_columns <- c("zip", "year", "qid",
"pm25_ensemble", "tmmx")
patient_summary <- read_data(denom_path, years = year_,
columns = denominator_columns)
dim(patient_summary)
names(patient_summary)
length(unique(patient_summary$qid))
library(data.table)
library(fst)
library(icd)
rm(list=ls())
library(NSAPHutils)
set_threads()
# Make sure working directory is set to moretrees2/code
# setwd("/nfs/home/E/ethomas/shared_space/ci3_analysis/moretrees2/code/")
library(data.table)
library(fst)
library(icd)
?expand_range
length(icd9cm2014_leaf)
length(icd9cm2014_leaf[[1]])
length(icd9cm2014_leaf[[2]])
length(icd9cm2014_leaf[[3]])
View(icd9cm_hierarchy)
dim(icd9cm_hierarchy)
length(unlist(icd9_map_multi_ccs[[i]]))
length(unlist(icd9_map_multi_ccs[[1]]))
ccs_icd9 <- data.frame(icd9 = unlist(icd9_map_multi_ccs[[1]]), stringsAsFactors = F)
head(ccs_icd9)
class(ccs_icd9$icd9)
ccs_icd9 <- data.frame(icd9 = unlist(icd9_map_multi_ccs[[1]]), stringsAsFactors = F)
for (i in 1:4) {
ccs_list <- icd9_map_multi_ccs[[i]]
ccs_df <- data.frame(icd9 = unlist(ccs_list),
stringsAsFactors = F)
ccs_df$ccs <- ccs_list %>%
names %>% # names of the list entries are the CCS codes
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
names(ccs_df)[2] <- paste0("ccs_l", i)
ccs_icd9 <- merge(ccs_icd9, ccs_df, by = "icd9", all.x = T, all.y = F)
}
dim(ccs_icd9)
head(ccs_icd9)
View(ccs_icd9)
class(ccs_icd9$ccs_l1)
ccs_icd9 <- subset(ccs_ics9, ccs_l1 == "7")
ccs_icd9 <- subset(ccs_icd9, ccs_l1 == "7")
dim(ccs_icd9)
codes <- icd9_chapters$"Diseases Of The Circulatory System"
codes <- expand_range(codes[1], codes[2])
codes <- get_leaf(codes)
length(intersect(codes, ccs_icd9$icd9))
# Code to get admission counts by person, by year for medicare data
# Make sure working directory is set to moretrees2/code
setwd("/nfs/home/E/ethomas/shared_space/ci3_analysis/moretrees2/code/")
library(NSAPHutils)
set_threads()
library(data.table)
library(fst)
library(icd)
library(magrittr)
# Get data.frame showing mapping from ICD9 to multilevel CCS
ccs_icd9 <- data.frame(icd9 = unlist(icd9_map_multi_ccs[[1]]), stringsAsFactors = F)
for (i in 1:4) {
ccs_list <- icd9_map_multi_ccs[[i]]
ccs_df <- data.frame(icd9 = unlist(ccs_list),
stringsAsFactors = F)
ccs_df$ccs <- ccs_list %>%
names %>% # names of the list entries are the CCS codes
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
names(ccs_df)[2] <- paste0("ccs_l", i)
ccs_icd9 <- merge(ccs_icd9, ccs_df, by = "icd9", all.x = T, all.y = F)
}
# Keep only diseases of the circulatory system
ccs_icd9 <- subset(ccs_icd9, ccs_l1 == "7")
admissions <- "../data/admissions"
admissions_columns <- c("QID", "DIAG1", "ADATE", "zipcode_R")
for (year_ in 2000:2014) {
# Read in data
admission_data <- read_data(admissions, years = year_, columns = admissions_columns)
names(admission_data) <- tolower(names(admission_data))
# Keep only relevant diagnoses
admission_data <- subset(admission_data, diag1 %in% codes)
# Merge in ccs codes
admission_data <- merge(admission_data, ccs_icd9, by.x = "diag1",
by.y = "icd9", all.x = T)
# Write to file
write_fst(admission_data, paste0("../data/admissions_cvd/admissions_cvd_", year_, ".fst"))
}
dim(admission_data)
names(admission_data)
length(unique(admission_data$diag1))
length(unique(admission_data$ccs_l4))
length(unique(ccs_icd9$ccs_l4))
