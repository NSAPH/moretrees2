dat <- read.csv("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Emma_med_den_pdx_2dx_10_04_2017.csv")
dat <- read.csv("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Medicare_Oct17/Emma_den_med_pdx_10_04_2017.csv")
dat <- read.csv("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Medicare_Oct17/Emma_den_med_pdx_10_04_2017.csv")
dat <- read.csv(file="/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/Emma_med_11_28_2017.csv")
dim(dat)
View(dat)
dat[1,]
names(dat)
class(dat$adate)
class(dat$ddate)
class(dat$Race_gp)
levels(dat$Race_gp)
class(dat$year)
min(dat$year)
max(dat$year)
class(dat$ddate)
sum(dat$ddate=="")
class(prov_num)
class(dat$prov_num)
blah <- as.numeric(dat$prov_num)
min(blah)
max(blah)
blah <- as.numeric(as.character(dat$prov_num))
min(blah)
min(blah[!is.na(blah)])
miax(blah[!is.na(blah)])
max(blah[!is.na(blah)])
class(dat$X_QID_)
min(dat$X_QID_)
max(dat$X_QID_)
levels(dat$Sex_gp)
class(dat$FIPS)
min(dat$FIPS)
min(dat$FIPS[!is.na(dat$FIPS)])
View(dat[,c("DODFLAG","BENE_DOD")])
adate <- Date(dat$adate)
adate <- as.Date(dat$adate)
?as.Date
dat$adate[`]
dat$adate[1]
''
""
'
aq
q
a;slkdjg
}
[]
`
`
`
dat$adate[1]
adate <- as.Date(dat$adate, format="%d%b%Y")
adate[1:10]
cbind(adate[1:10],dat$adate[1:10])
adate[1:10]
dat$adate[1:10]
dat$adate_r <- as.Date(dat$adate, format="%d%b%Y")
dat$ddate_r <- as.Date(dat$ddate, format="%d%b%Y")
dat$BENE_DOD_r <- as.Date(dat$BENE_DOD_r, format="%d%b%Y")
dat$BENE_DOD_r <- as.Date(dat$BENE_DOD, format="%d%b%Y")
dat_diff <- dat$BENE_DOD_r - dat$ddat_r
summary(dat_diff)
class(dat$BENE_DOD_r)
class(dat$ddat_r)
class(dat$ddate_r)
dat_diff <- dat$BENE_DOD_r - dat$ddate_r
summary(dat_diff)
summarize(dat_diff)
class(dat_diff)
summary(as.numeric(dat_diff))
max(dat)diff
max(dat_diff)
max(dat_diff[!is.na(dat_diff)])
min(dat_diff[!is.na(dat_diff)])
dat_diff <- dat_diff[!is.na(dat_diff)]
summary(dat_diff)
max(dat_diff)
min(dat_diff)
sum(dat_diff < 0)
length(dat_diff)
length_stay <- dat$adate_r - dat$ddate_r
max(length_stay)
min(length_stay)
length_stay <- dat$ddate_r - dat$adate_r
summary(length_stay)
max(length_stay)
min(length_stay)
min(dat_diff)
max(dat_diff)
1275/365.25
length(unique(dat$QID))
length(unique(dat$X_QID_))
dim(dat)
nrow(dat)/length(unique(dat$X_QID_))
nrow(dat)/length(unique(dat$QID))
nrow(dat)/length(unique(dat$prov_num))
max(dat$BENE_DOD_r)
max(dat$BENE_DOD_r,na.rm=T)
medi <- dat
rm(dat)
temp <- read.csv(file="/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/data_JAMA_heatwaves_paper/zip files/County_weather_1999_2010_04_06_2014.CSV")
names(temp)
?merge
names(medi)
View(temp)
temp$adate_r <- as.date(temp$link_ID)
?as.date
temp$adate_r <- as.Date(temp$link_ID)
temp$adate_r[1:10]
medi$adate_r[1:10]
min(medi$adate_r)
min(temp$adate_r)
max(medi$adate_r)
max(temp$adate_r)
dat <- merge(medi, temp, by=c("FIPS","adate_r"), all.x=T)
dim(dat)
dim(medi)
save(dat,file="/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/merged.Rdata")
dim(Dat)
dim(dat)
min(temp$adate_r)
max(temp$adate_r)
keep <- dat$adate_r <= Date("2010-12-31") & dat$adate_r >= Date("1999-01-01")
keep <- dat$adate_r <= as.Date("2010-12-31") & dat$adate_r >= as.Date("1999-01-01")
sum(keep)
dim(dat)
sum(keep)/nrow(dat)
dat <- dat[keep,]
View(dat)
save(dat,file="/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/merged.Rdata")
load(file="/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/merged.Rdata")
View(dat)
head(dat)
View(head(dat))
names(dat)
class(dat$FIPS)
CSA.names <- c("Chicago-Naperville, IL-IN-WI", "New York-Newark, NY-NJ-CT-PA",
"Miami-Fort Lauderdale-Port St. Lucie, FL", "Houston-The Woodlands, TX", "Los Angeles-Long Beach, CA")
for(nm in CSA.names){
}
nm <- CSA.names[1]
nm
CSA.fips <- read.csv(file=paste0("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/R_code/MORETreeS/Data/CSAs/",nm,"_FIPS_codes.csv"),header = F)[,1]
CSA.fips
dat_sub <- subset(dat,FIPS %in% CSA.fips & Emer_adm==1,select=c("QID","Race_gp","Sex_gp","Dual","diag1","adate","temperature_daily_county_mean","temperature_daily_county_min","temperature_daily_county_max"))
save(dat_sub,file=paste0("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/merged_",nm,".Rdata"))
CSA.names <- c("Chicago-Naperville, IL-IN-WI", "New York-Newark, NY-NJ-CT-PA",
"Miami-Fort Lauderdale-Port St. Lucie, FL", "Houston-The Woodlands, TX", "Los Angeles-Long Beach, CA")
for(nm in CSA.names){
# Read in list of relevant FIPS codes
CSA.fips <- read.csv(file=paste0("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/R_code/MORETreeS/Data/CSAs/",nm,"_FIPS_codes.csv"),header = F)[,1]
# Extract data for this city, keeping only relevant variables and emergency admissions only
dat_sub <- subset(dat,FIPS %in% CSA.fips & Emer_adm==1,select=c("QID","Race_gp","Sex_gp","Dual","diag1","adate","temperature_daily_county_mean","temperature_daily_county_min","temperature_daily_county_max"))
# Save dataset
save(dat_sub,file=paste0("/nfs/home/E/ethomas/shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/merged_",nm,".Rdata"))
}
dim(dat_sub)
names(dat_sub)
length(unique(dat_sub$QID))
dim(dat)
require(fst)
read_fst(file="./shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/zipcode_er_part14.fst")
?read_fst
read_fst(path="./shared_space/ci3_nsaph/Emma/Data/Case_crossover_data/zipcode_er_part14.fst")
require(NSAPHutils)
devtools::install_github("NSAPH/NSAPHutils")
require(NSAPHutils)
require(fst)
dir <- "shared_space/ci3_health_data/medicare/gen_admission/1999_2016/targeted_conditions/cache_data/admissions_by_year/"
getwd()
print(list.files(dir))
print(fst.metadata(paste0(dir,"admissions_2000.fst")))
View(fst.metadata(paste0(dir,"admissions_2000.fst")))
require(icd)
getwd()
setwd("/nfs/home/E/ethomas/shared_space/ci3_analysis/moretrees2/code/")
library(NSAPHutils)
set_threads()
library(data.table)
library(fst)
library(icd)
# Get list of relevant ICD9 codes at billable level
codes <- icd9_chapters$"Diseases Of The Circulatory System"
codes <- expand_range(codes[1], codes[2])
codes <- get_leaf(codes)
admissions <- "../data/admissions"
denom_path <- "../data/denominator/"
year <- 2010
admission_data <- read_data(admissions, years = year_, columns = c("QID", "DIAG1"))
year_ <- 2010
admission_data <- read_data(admissions, years = year_, columns = c("QID", "DIAG1"))
names(admission_data) <- tolower(names(admission_data))
# Keep only relevant diagnoses
admission_data <- subset(admission_data, diag1 %in% codes)
admission_data$diag1 <- factor(admission_data$diag1, levels = codes)
?read_dat
?read_data
patient_summary <- read_data(denom_path, years = year_)
??NSAPHutil
??NSAPHutils
?list_available_data
list_available_data(denom_path)
list_available_data(other)
list_available_data("other")
list_available_data("exposure")
codes <- icd9_chapters$"Diseases Of The Circulatory System"
codes <- expand_range(codes[1], codes[2])
codes <- get_leaf(codes)
admissions <- "../data/admissions"
denom_path <- "../data/denominator/"
denom_columns <- c("qid", "zip")
year_
admission_data <- read_data(admissions, years = year_, columns = c("QID", "DIAG1"))
names(admission_data) <- tolower(names(admission_data))
# Keep only relevant diagnoses
admission_data <- subset(admission_data, diag1 %in% codes)
admission_data$diag1 <- factor(admission_data$diag1, levels = codes)
# Get zip codes
patient_summary <- read_data(denom_path, years = year_, columns = denom_columns)
names(patient_summary)
names(admission_data)
blah <- read_fst("../data/admissions_2000.fst", from=1, to =1)
?read_fst
blah <- read_fst("../data/admissions/admissions_2000.fst", from=1, to =1)
blah
View(blah)
year_ <- 2000
admissions_columns <- c("QID", "DIAG1", "ADATE", "zipcode_R")
admission_data <- read_data(admissions, years = year_, columns = admissions_columns)
names(admission_data) <- tolower(names(admission_data))
# Keep only relevant diagnoses
admission_data <- subset(admission_data, diag1 %in% codes)
admission_data$diag1 <- factor(admission_data$diag1, levels = codes)
?icd9_comorbid_ccs
??ccs
ccs_codes <- icd9_comorbid_ccs(admission_data, visit_name = "qid", icd_name = "diag1")
class(ccs_codes)
dim(ccs_codes)
dim(admisison_data)
dim(admission_data)
names(ccs_codes)
head(ccs_codes)
names(admission_data)
head(admission_data)
dim(ccs_codes)
length(unique(admission_data$qid))
ccs_codes <- icd9_comorbid_ccs(data.frame(id = 1:nrow(admission_data), diag1 = admission_data$diag1),
visit_name = "qid", icd_name = "diag1",
short_code = T, single = F, lvl = 4, hierarchy = T)
ccs_codes <- icd9_comorbid_ccs(data.frame(id = 1:nrow(admission_data), diag1 = admission_data$diag1),
visit_name = "id", icd_name = "diag1",
short_code = T, single = F, lvl = 4, hierarchy = T)
ccs_codes <- icd9_comorbid_ccs(data.frame(id = 1:nrow(admission_data), diag1 = admission_data$diag1),
visit_name = "id", icd_name = "diag1",
short_code = T, single = F, lvl = 4)
dim(ccs_codes)
dim(admission_data)
rowSums(ccs_codes)
blah <- rowSums(ccs_codes)
sum(blah == 1)
length(blah)
View(head(ccs_codes))
colnames(ccs_codes)
View(head(ccs_codes))
length(colnames(ccs_codes))
colnames(ccs_codes)p209
colnames(ccs_codes)[209]
sum(ccs_codes[,209])
unique(admission_data$diag1)
sum(unique(admission_data$diag1) == "")
class(unique(admission_data$diag1))
sum(unique(admission_data$diag1) == " ")
View(icd_map_single_ccs)
blah <- data(icd_map_single_ccs)
head(icd9_map_single_ccs)
length(icd9_map_single_ccs)
length(icd9_map_multi_ccs)
icd9_map_multi_ccs[[1]]
icd9_map_multi_ccs[[4]]
ccs_names <- colnames(ccs_codes)
ccs_names
ccs_codes2 <- apply(ccs_codes, 1, which)
ccs_codes2
ccs_codes$which <- ccs_codes2
names(ccs_codes)
rm(ccs_codes2)
admission_data$visit_id <- 1:nrow(admission_data)
icd9_map_multi_ccs[[4]]
blah <- unlist(icd9_map_multi_ccs[[4]])
names(blah)
ccs_codes <- icd9_comorbid_ccs(admission_data,
visit_name = "visit_id", icd_name = "diag1",
short_code = T, single = F, lvl = 4)
ccs_names <- colnames(ccs_codes)
ccs_codes$which <- apply(ccs_codes, 1, which)
ls()
ccs <- apply(ccs_codes, 1, which)
ccs
ccs <- ccs_names[ccs]
ccs
ccs_codes <- data.frame(visit_id = ccs_codes$visit_id, ccs = ccs)
names(ccs_codes)
rownames(ccs_codes)
ccs_codes <- data.frame(visit_id = as.integer(rownames(ccs_codes)), ccs = ccs)
dim(ccs_codes)
View(head(ccs_codes))
dim(admission_data)
dim(ccs_codes)
admission_data <- merge(admission_data, ccs_codes, by = "visit_id", all.x = T)
View(head(admission_data))
ccs_match <- icd9_map_multi_ccs[[4]]
class(ccs_match)
length(ccs_match)
dim(ccs_match)
length(ccs_match[[1]])
length(ccs_match[[2]])
length(ccs_match[[20]])
ccs_icd9 <- data.frame(icd9 = unlist(ccs_match))
dim(ccs_icd9)
ccs_list[[]]
ccs_list[[1]]
ccs_list <- icd9_map_multi_ccs[[4]]
ccs_icd9 <- data.frame(icd9 = unlist(ccs_list))
ccs_list[[1]]
name(ccs_list[[1]])
names(ccs_list[[1]])
names(ccs_list)
nm <- names(ccs_list)[22]
nm
rep(nm, length(ccs_list[nm]))
ccs_list[nm]
rep(nm, length(ccs_list[[nm]]))
ccs_icd9$ccs <- sapply(names(ccs_list), function(nm) rep(nm, length(ccs_list[[nm]])))
ccs_icd9$ccs <- sapply(names(ccs_list), function(nm) rep(nm, length(ccs_list[[nm]])),
simplify = T)
blah <- sapply(names(ccs_list), function(nm) rep(nm, length(ccs_list[[nm]])),
simplify = T)
class(blah)
?sapply
simplify = "vector")
simplify = "vector")
ccs_icd9$ccs <- sapply(names(ccs_list), function(nm) rep(nm, length(ccs_list[[nm]])),
simplify = "vector")
ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
library(magrittr)
ccs_icd9$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
admissions <- "../data/admissions"
View(ccs_icd9)
head(ccs_icd9)
ccs_list <- icd9_map_multi_ccs[[4]]
ccs_icd9 <- data.frame(icd9 = unlist(ccs_list))
head(ccs_icd9)
ccs_icd9$ccs <- row.names(ccs_icd9)
head(ccs_icd9)
row.names(ccs_icd9) <- NULL
ccs_list <- icd9_map_multi_ccs[[4]]
ccs_icd9 <- data.frame(icd9 = unlist(ccs_list))
row.names(ccs_icd9) <- NULL
ccs_icd9$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
head(ccs_icd9)
all.equal(ccs_list[[n]], ccs_icd9$icd9[ccs_icd9$ccs = names(ccs_list)[n]])
n <- 10
all.equal(ccs_list[[n]], ccs_icd9$icd9[ccs_icd9$ccs == names(ccs_list)[n]])
all.equal(as.character(ccs_list[[n]]), as.character(ccs_icd9$icd9[ccs_icd9$ccs == names(ccs_list)[n]]))
n < 100
all.equal(as.character(ccs_list[[n]]), as.character(ccs_icd9$icd9[ccs_icd9$ccs == names(ccs_list)[n]]))
n <-2
all.equal(as.character(ccs_list[[n]]), as.character(ccs_icd9$icd9[ccs_icd9$ccs == names(ccs_list)[n]]))
class(ccs_icd9$icd9)
ccs_list <- icd9_map_multi_ccs[[4]]
ccs_icd9 <- data.frame(icd9 = unlist(ccs_list), stringsAsFactors = F)
row.names(ccs_icd9) <- NULL
ccs_icd9$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
ccs_icd9 <- tibble(icd9 = unlist(ccs_list))
ccs_list <- icd9_map_multi_ccs[[4]]
ccs_icd9 <- data.frame(icd9 = unlist(ccs_list), stringsAsFactors = F)
row.names(ccs_icd9) <- NULL
ccs_icd9$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
dim(ccs_icd9)
ccs_icd9 <- subset(ccs_icd9, icd9 %in% codes)
dim(ccs_icd9)
length(code)
length(codes)
admissions <- "../data/admissions"
denom_path <- "../data/denominator/"
# denom_path <- "../data/denominator/"
admissions_columns <- c("QID", "DIAG1", "ADATE", "zipcode_R")
admission_data <- read_data(admissions, years = year_, columns = admissions_columns)
admission_data <- subset(admission_data, diag1 %in% codes)
names(admission_data) <- tolower(names(admission_data))
# Keep only relevant diagnoses
admission_data <- subset(admission_data, diag1 %in% codes)
dim(admission_data)
sum(admission_data$diag1 %in% codes)
length(unique(admission_data$diag1))
admission_data <- merge(admission_data, ccs_icd9, by.x = "diag1",
by.y = "icd9", all.x = T)
dim(admission_data)
head(admission_data)
admission_data$ccs[1:1000]
length(unique(admission_data$diag1))
length(unique(codes))
?get_leaf
codes[codes=="390"]
codes
View(admission_data[admission_data$ccs == "",])
View(admission_data[admission_data$ccs == " ",])
unique(admission_data[admission_data$ccs == " ",]$diag1)
length(codes)
dim(ccs_icd9)
admission_data <- read_data(admissions, years = year_, columns = admissions_columns)
names(admission_data) <- tolower(names(admission_data))
# Keep only relevant diagnoses
admission_data <- subset(admission_data, diag1 %in% codes)
class(admission_data$diag1)
length(unique(admission_data$diag1))
sum(!(unique(admission_data$diag1) %in% ccs_icd9$icd9))
dim(admission_data)
admission_data <- subset(admission_data, diag1 %in% codes)
dim(admission_data)
sum(!(unique(admission_data$diag1) %in% ccs_icd9$icd9))
admission_data <- merge(admission_data, ccs_icd9, by.x = "diag1",
by.y = "icd9", all.x = T)
dim(admission_data)
length(unique(admission_data$icd9))
length(unique(admission_data$diag1))
sum(admission_data$ccs == " ")
dim(ccs)
dim(ics9_ccs)
dim(icd9_ccs)
dim(ccs_icd9)
sum(ccs_icd9$ccs == " ")
Viw(ccs_icd9)
View(ccs_icd9)
dim(ccs_icd9)
codes <- icd9_chapters$"Diseases Of The Circulatory System"
codes <- expand_range(codes[1], codes[2])
codes <- get_leaf(codes)
# Get data.frame showing mapping from ICD9 to CCS
ccs_list <- icd9_map_multi_ccs[[4]]
blah <- unlist(ccs_list)
sum(!(codes %in% blah))
blah <- names(ccs_list)
sum(blah == " ")
ccs_list[[" "]]
sapply(ccs_list, length)
ccs_list <- icd9_map_multi_ccs[[1]]
ccs_list[[" "]]
ccs_list[[""]]
names(ccs_list)
lenght(unlist(ccs_list))
length(unlist(ccs_list))
ccs_list <- icd9_map_multi_ccs[[4]]
length(unlist(ccs_list))
ccs_list[[" "]]
ccs_list <- icd9_map_multi_ccs[[3]]
length(ccs_list)
ccs_list[[" "]]
rm(list = ls())
# Code to get admission counts by person, by year for medicare data
# Make sure working directory is set to moretrees2/code
setwd("/nfs/home/E/ethomas/shared_space/ci3_analysis/moretrees2/code/")
library(NSAPHutils)
set_threads()
library(data.table)
library(fst)
library(icd)
library(magrittr)
# Get list of relevant ICD9 codes at billable level
codes <- icd9_chapters$"Diseases Of The Circulatory System"
codes <- expand_range(codes[1], codes[2])
codes <- get_leaf(codes)
# Get data.frame showing mapping from ICD9 to CCS
ccs_list <- icd9_map_multi_ccs[[4]]
ccs_icd9 <- data.frame(icd9 = unlist(ccs_list),
stringsAsFactors = F)
row.names(ccs_icd9) <- NULL
ccs_icd9$ccs <- ccs_list %>%
names %>%
sapply(FUN = function(nm) rep(nm, length(ccs_list[[nm]]))) %>%
unlist
ccs_icd9 <- subset(ccs_icd9, icd9 %in% codes)
admissions <- "../data/admissions"
# denom_path <- "../data/denominator/"
admissions_columns <- c("QID", "DIAG1", "ADATE", "zipcode_R")
# denom_columns <- c("qid", "zip")
for (year_ in 2000:2014) {
admission_data <- read_data(admissions, years = year_, columns = admissions_columns)
names(admission_data) <- tolower(names(admission_data))
# Keep only relevant diagnoses
admission_data <- subset(admission_data, diag1 %in% codes)
# Merge in ccs codes
admission_data <- merge(admission_data, ccs_icd9, by.x = "diag1",
by.y = "icd9", all.x = T)
write_fst(counts, paste0("../data/admission_counts/admission_counts_", year_, ".fst"))
}
